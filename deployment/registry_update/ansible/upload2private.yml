---
- name: upload images to private registry from public
  hosts: inside
  gather_facts: no
  vars_files:
    - host_vars/images.yml
  tasks:
  # - name: Install Docker Service
  #   become: yes
  #   apt: name=docker update_cache=yes

  # - name: Create docker override config file
  #   become: yes
  #   template:
  #     src: "daemon.json.j2"
  #     dest: /etc/docker/daemon.json
  #   when: public_registry is defined and public_registry and not is_secure_public_registry
  #   notify: restart docker

  - name: install python-pip
    become: yes
    apt: name={{ item }}
    with_items:
      - python-pip
  
  - name: Upgrade pip
    pip:
      name: pip
      extra_args: --upgrade

  - name: Install Docker-py
    pip: name=docker-py

  - block:
    - name: private registry dir is exist
      become: yes
      file: path=/opt/registry state=directory

    - name: pull registry image
      docker_image:
        name: registry
        tag: latest
        source: pull

    - name: ensure private registry is running
      docker_container: 
        name: registry
        image: registry:latest
        state: started
        volumes:
          - "/opt/registry:/var/lib/registry"
        ports:
          - "5000:5000"
    - set_fact:
        private_registry: "127.0.0.1:5000"
    when: not private_registry

  - name: Tag and push to private regsitry
    docker_image:
      name: "{{ public_registry }}/{{ item | regex_replace('(docker.io|quay.io|k8s.gcr.io|gcr.io)/') }}"
      repository: "{{ private_registry }}/{{ item | regex_replace('(docker.io|quay.io|k8s.gcr.io|gcr.io)/') }}"
      push: yes
      source: pull
    with_items: "{{ images }}"
  
  handlers:
    - name: restart docker
      become: yes
      service: name=docker state=restarted
      listen: restart docker